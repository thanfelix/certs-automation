name: Deploy Nginx Cert

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install nginx
        run: |
          sudo apt-get update -y
          sudo apt install nginx -y
          sudo systemctl start nginx
          curl -I http://127.0.0.1:80
          
      - name: Copy archives
        run: |
          sudo cp -rv etc/nginx /etc/nginx
          sudo cp -rv var/log/nginx /var/log/nginx
          mkdir /etc/nginx/ssl

      - name: Criar o certificado a partir do Base64
        run: |
          echo -e "$CERTIFICADO_BASE64\n$CA_BASE64\n$ROOT_BASE64" | base64 --decode | sudo tee /etc/nginx/ssl/petmatching.com.br.crt
          echo "$CHAVE_BASE64" | base64 --decode | sudo tee /etc/nginx/ssl/petmatching.com.br.key > /dev/null
          cat /etc/nginx/ssl/petmatching.com.br.crt
          /etc/nginx/ssl/petmatching.com.br.key
          sudo nginx -t
          sudo systemctl reload nginx
          sleep 15
          sudo systemctl status nginx
          echo -s | openssl s_client -servername petmatching.com.br -connect 127.0.0.1:443 2>&1 |openssl x509 -noout -issuer -dates -subject | grep "not"
          echo -s | openssl s_client -servername petmatching.com.br -connect 127.0.0.1:443 2>&1 | grep "Verify return code"

        env:
          CERTIFICADO_BASE64: ${{ secrets.PETMATCHING_CRT }}
          CHAVE_BASE64: ${{ secrets.PETMATCHING_KEY }}
          CA_BASE64: ${{ secrets.CA_INTERMEDIARIA }}
          ROOT_BASE64: ${{ secrets.ROOT_CA }} 

        #- name: Test a certificate
        #run: |
        #  echo -s | openssl s_client -servername petmatching.com.br -connect 127.0.0.1:443 2>&1 |openssl x509 -noout -issuer -dates -subject | grep "not"
        #  echo -s | openssl s_client -servername petmatching.com.br -connect 127.0.0.1:443 2>&1 | grep "Verify return code"
